server.port=443
server.servlet.context-path=/

server.ssl.enabled=true

## cert
#server.ssl.key-store=classpath:cert/server.keystore
#server.ssl.key-store-type=PKCS12
#server.ssl.key-alias=server
#server.ssl.key-store-password=123456
#
## ???????SSL????,????????????
## ?????????
#server.ssl.client-auth=need
#server.ssl.trust-store=classpath:cert/server.keystore
#server.ssl.trust-store-type=PKCS12
#server.ssl.trust-store-password=123456
#server.ssl.trust-store-provider=SUN

## cert2
#server.ssl.key-store=classpath:cert2/server.keystore
#server.ssl.key-store-type=PKCS12
#server.ssl.key-alias=server
#server.ssl.key-store-password=123456
#
## ???????SSL????,????????????
## ?????????
#server.ssl.client-auth=need
#server.ssl.trust-store=classpath:cert2/server.keystore
#server.ssl.trust-store-type=PKCS12
#server.ssl.trust-store-password=123456
#server.ssl.trust-store-provider=SUN


## cert3
## ??SSL????,?????????????
#server.ssl.key-store=classpath:cert3/server.p12
#server.ssl.key-store-type=PKCS12
#server.ssl.key-alias=server
#server.ssl.key-store-password=123456
#
##??????
#server.ssl.trust-store=classpath:cert3/springboot_keystore.keystore
#server.ssl.trust-store-password=123456
#server.ssl.client-auth=need
#server.ssl.trust-store-type=JKS
#server.ssl.trust-store-provider=SUN

## cert4
#server.ssl.key-store=classpath:cert4/localhost.jks
#server.ssl.key-store-type=JKS
#server.ssl.key-alias=localhost
#server.ssl.key-store-password=123456
#
## ???????SSL????,????????????
## ?????????
#server.ssl.client-auth=need
#server.ssl.trust-store=classpath:cert4/localhost.jks
#server.ssl.trust-store-type=JKS
#server.ssl.trust-store-password=123456
#server.ssl.trust-store-provider=SUN


# cert5
#server.ssl.key-store=classpath:cert5/server.jks
#server.ssl.key-store-type=JKS
#server.ssl.key-alias=server
#server.ssl.key-store-password=123456

# ???????SSL????,????????????
# ?????????
#server.ssl.client-auth=need
#server.ssl.trust-store=classpath:cert5/server.jks
#server.ssl.trust-store-type=JKS
#server.ssl.trust-store-password=123456
#server.ssl.trust-store-provider=SUN



## Key Store 是一个存储私钥和证书的地方。它通常用于服务器端，保存应用程序的私钥和相关的公钥证书。
## 可以包含多个条目，包括私钥、证书链等。通常需要密码来保护密钥和证书
## 常见格式包括 JKS（Java Key Store）、PKCS12 等。
#server.ssl.key-store=classpath:certs/server.jks
#server.ssl.key-store-password=12345678
#server.ssl.key-store-type=JKS
## Trust Store 是一个存储受信任的证书的地方。它通常用于客户端，保存被信任的 CA（证书颁发机构）证书和其他公钥证书。
## 主要包含公钥证书，通常是 CA 证书或中间证书。同样可以使用密码保护，但通常不涉及私钥。
## 也可以使用 JKS 或 PKCS12 格式。
#server.ssl.trust-store=classpath:certs/rootCA2.jks
#server.ssl.trust-store-password=12345678
#server.ssl.trust-store-type=JKS
## 是否需要验证客户端
#server.ssl.client-auth=need





# Key Store 是一个存储私钥和证书的地方。它通常用于服务器端，保存应用程序的私钥和相关的公钥证书。
# 可以包含多个条目，包括私钥、证书链等。通常需要密码来保护密钥和证书
# 常见格式包括 JKS（Java Key Store）、PKCS12 等。
server.ssl.key-store=classpath:cert_keytool/keystore.jks
server.ssl.key-store-password=12345678
server.ssl.key-store-type=JKS
# Trust Store 是一个存储受信任的证书的地方。它通常用于客户端，保存被信任的 CA（证书颁发机构）证书和其他公钥证书。
# 主要包含公钥证书，通常是 CA 证书或中间证书。同样可以使用密码保护，但通常不涉及私钥。
# 也可以使用 JKS 或 PKCS12 格式。
server.ssl.trust-store=classpath:cert_keytool/truststore.jks
server.ssl.trust-store-password=12345678
server.ssl.trust-store-type=JKS
# 是否需要验证客户端
server.ssl.client-auth=need


